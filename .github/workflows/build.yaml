name: build

on:
  workflow_dispatch:
  push:
    branches: 
      - ci/*
  release:
    types:
      created

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}

    strategy:
      matrix:
        job:
          - { target: aarch64-unknown-linux-gnu   , os: ubuntu-24.04, use-cross: true }
          - { target: aarch64-unknown-linux-musl  , os: ubuntu-24.04, use-cross: true }
          - { target: arm-unknown-linux-gnueabihf , os: ubuntu-24.04, use-cross: true }
          - { target: arm-unknown-linux-musleabihf, os: ubuntu-24.04, use-cross: true }
          - { target: aarch64-apple-darwin        , os: macos-14                      }
          - { target: x86_64-pc-windows-gnu       , os: windows-2022                  }
          - { target: x86_64-pc-windows-msvc      , os: windows-2022                  }
          - { target: aarch64-pc-windows-msvc     , os: windows-11-arm                }
          - { target: x86_64-unknown-linux-gnu    , os: ubuntu-24.04, use-cross: true }
          - { target: x86_64-unknown-linux-musl   , os: ubuntu-24.04, use-cross: true }
    
    env:
      BUILD_CMD: cargo

    steps:

      - name: Checkout sourcecode
        uses: actions/checkout@v5

      - name: Ensure system deps
        shell: bash
        run: |
          # Prepare for arm and aarch64
          case "${{ matrix.job.target}}" in
            arm-unknown-linux-*)
              sudo apt-get update -y
              sudo apt-get install -y gcc-arm-linux-gnueabihf
              ;;
            aarch64-unknown-linux-*)
              sudo apt-get update -y
              sudo apt-get install -y gcc-aarch64-linux-gnu
              ;;
          esac

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.job.target }}
      
      - name: Install cross
        if: matrix.job.use-cross == true
        uses: taiki-e/install-action@v2
        with:
          tool: cross

      - name: Enable cross
        if: matrix.job.use-cross == true
        run: |
          echo "BUILD_CMD=cross" >> $GITHUB_ENV

      - name: Show versions
        shell: bash
        run: |
          gcc --version || true
          rustup -V
          rustc -V
          cargo -V
          
      - name: Build release binary
        shell: bash
        run: |
          $BUILD_CMD build --target ${{ matrix.job.target }} --release
        